version: '3'

services:
  postgres:
    image: postgres:16.1
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pw}
      POSTGRES_DB: flwr
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER:-root} -d flwr
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    restart: "on-failure"
  flwr_superlink_migration:
    image: flwr_superlink_migration:latest
    build:
      context: ../../src
      dockerfile: docker/superlink-migration/Dockerfile
    environment:
      - FLWR_LEVEL=INFO,sqlx::query=debug
      - FLWR_URL="postgres://${POSTGRES_USER:-root}:${POSTGRES_PASSWORD:-pw}@postgres:5432/flwr"
    networks:
      - internal
    depends_on:
      postgres:
        condition: service_healthy
  flwr_superlink:
    image: flwr_superlink:latest
    build:
      context: ../../src
      dockerfile: docker/superlink/Dockerfile
    ports:
      - "${SERVER_PORT:-50051}:${SERVER_PORT:-50051}"
      - 9000:9000
    environment:
      - FLWR_LOGGING__LEVEL=INFO,flwr=DEBUG,sqlx::query=debug
      - FLWR_TRACER__ENABLED=true
      - FLWR_TRACER__ENDPOINT=http://jaegertracing:4317
      # - FLWR_LOGGING__LEVEL=INFO
      - FLWR_DATABASE__URI="postgres://${POSTGRES_USER:-root}:${POSTGRES_PASSWORD:-pw}@postgres:5432/flwr"
    networks:
      - internal
    healthcheck:
      test: /bin/grpc_health_probe -addr=:50051
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 1024M
    restart: "on-failure"
    depends_on:
      postgres:
        condition: service_healthy
      flwr_superlink_migration:
        condition:
          service_completed_successfully
  flwr_driver:
    image: flwr_example_driver:latest
    build:
      context: driver-code
      dockerfile: ../Dockerfile.driver
    networks:
      - internal
    depends_on:
        flwr_superlink:
          condition: service_healthy
  flwr_client:
    image: flwr_example_client:latest
    build:
      context: client-code
      dockerfile: ../Dockerfile.client
    command: --server flwr_superlink:${SERVER_PORT:-50051} --insecure client:flower
    networks:
      - internal
    depends_on:
        flwr_superlink:
          condition: service_healthy
    deploy:
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: "2"
          memory: 1024M
  prometheus:
    image: prom/prometheus:latest
    command: --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - 9090:9090
    networks:
      - internal
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 500M
    restart: "on-failure"
  grafana:
    image: grafana/grafana:latest
    command: --config=/etc/grafana/grafana.ini
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./config/grafana.ini:/etc/grafana/grafana.ini
      - ./config/datasources:/etc/grafana/provisioning/datasources
      - ./config/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    networks:
      - internal
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 400M
    restart: "on-failure"
  jaegertracing:
    image: jaegertracing/all-in-one:latest
    ports:
      - 4317:4317
      - 16686:16686
    depends_on:
      - prometheus
    networks:
      - internal
    restart: "on-failure"

networks:
  internal:

volumes:
  postgres_data:
  grafana-storage:
